/*
 * OneLogin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.GetClientApps200ResponseInnerScopesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetClientApps200ResponseInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-08T11:55:15.106928-07:00[America/Los_Angeles]")
public class GetClientApps200ResponseInner {
  public static final String SERIALIZED_NAME_SCOPES = "scopes";
  @SerializedName(SERIALIZED_NAME_SCOPES)
  private List<GetClientApps200ResponseInnerScopesInner> scopes = null;

  public static final String SERIALIZED_NAME_APP_ID = "app_id";
  @SerializedName(SERIALIZED_NAME_APP_ID)
  private Integer appId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_API_AUTH_ID = "api_auth_id";
  @SerializedName(SERIALIZED_NAME_API_AUTH_ID)
  private Integer apiAuthId;

  public GetClientApps200ResponseInner() { 
  }

  public GetClientApps200ResponseInner scopes(List<GetClientApps200ResponseInnerScopesInner> scopes) {
    
    this.scopes = scopes;
    return this;
  }

  public GetClientApps200ResponseInner addScopesItem(GetClientApps200ResponseInnerScopesInner scopesItem) {
    if (this.scopes == null) {
      this.scopes = new ArrayList<>();
    }
    this.scopes.add(scopesItem);
    return this;
  }

   /**
   * Get scopes
   * @return scopes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<GetClientApps200ResponseInnerScopesInner> getScopes() {
    return scopes;
  }


  public void setScopes(List<GetClientApps200ResponseInnerScopesInner> scopes) {
    this.scopes = scopes;
  }


  public GetClientApps200ResponseInner appId(Integer appId) {
    
    this.appId = appId;
    return this;
  }

   /**
   * Get appId
   * @return appId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAppId() {
    return appId;
  }


  public void setAppId(Integer appId) {
    this.appId = appId;
  }


  public GetClientApps200ResponseInner name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public GetClientApps200ResponseInner apiAuthId(Integer apiAuthId) {
    
    this.apiAuthId = apiAuthId;
    return this;
  }

   /**
   * Get apiAuthId
   * @return apiAuthId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getApiAuthId() {
    return apiAuthId;
  }


  public void setApiAuthId(Integer apiAuthId) {
    this.apiAuthId = apiAuthId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetClientApps200ResponseInner getClientApps200ResponseInner = (GetClientApps200ResponseInner) o;
    return Objects.equals(this.scopes, getClientApps200ResponseInner.scopes) &&
        Objects.equals(this.appId, getClientApps200ResponseInner.appId) &&
        Objects.equals(this.name, getClientApps200ResponseInner.name) &&
        Objects.equals(this.apiAuthId, getClientApps200ResponseInner.apiAuthId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scopes, appId, name, apiAuthId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetClientApps200ResponseInner {\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    apiAuthId: ").append(toIndentedString(apiAuthId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("scopes");
    openapiFields.add("app_id");
    openapiFields.add("name");
    openapiFields.add("api_auth_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GetClientApps200ResponseInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (GetClientApps200ResponseInner.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetClientApps200ResponseInner is not found in the empty JSON string", GetClientApps200ResponseInner.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!GetClientApps200ResponseInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetClientApps200ResponseInner` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      JsonArray jsonArrayscopes = jsonObj.getAsJsonArray("scopes");
      if (jsonArrayscopes != null) {
        // ensure the json data is an array
        if (!jsonObj.get("scopes").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `scopes` to be an array in the JSON string but got `%s`", jsonObj.get("scopes").toString()));
        }

        // validate the optional field `scopes` (array)
        for (int i = 0; i < jsonArrayscopes.size(); i++) {
          GetClientApps200ResponseInnerScopesInner.validateJsonObject(jsonArrayscopes.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetClientApps200ResponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetClientApps200ResponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetClientApps200ResponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetClientApps200ResponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetClientApps200ResponseInner>() {
           @Override
           public void write(JsonWriter out, GetClientApps200ResponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetClientApps200ResponseInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GetClientApps200ResponseInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GetClientApps200ResponseInner
  * @throws IOException if the JSON string is invalid with respect to GetClientApps200ResponseInner
  */
  public static GetClientApps200ResponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetClientApps200ResponseInner.class);
  }

 /**
  * Convert an instance of GetClientApps200ResponseInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

