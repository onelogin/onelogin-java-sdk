/*
 * OneLogin API
 * OpenAPI Specification for OneLogin
 *
 * The version of the OpenAPI document: 3.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onelogin.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Verbs are used to distinguish between different types of events. Where possible use one of the following verbs to describe the event. Alternately you can create custom verbs to describe other types of actions within your application.
 */
@JsonAdapter(Verb.Adapter.class)
public enum Verb {
  
  LOG_IN("log-in"),
  
  LOG_OUT("log-out"),
  
  LOG_IN_DENIED("log-in-denied"),
  
  AUTHENTICATION_CHALLENGE("authentication-challenge"),
  
  AUTHENTICATION_CHALLENGE_PASS("authentication-challenge-pass"),
  
  AUTHENTICATION_CHALLENGE_FAIL("authentication-challenge-fail");

  private String value;

  Verb(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static Verb fromValue(String value) {
    for (Verb b : Verb.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<Verb> {
    @Override
    public void write(final JsonWriter jsonWriter, final Verb enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public Verb read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return Verb.fromValue(value);
    }
  }
}

