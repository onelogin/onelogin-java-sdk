/*
 * OneLogin API
 * OpenAPI Specification for OneLogin
 *
 * The version of the OpenAPI document: 3.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import com.onelogin.client.ApiException;
import com.onelogin.client.model.AltErr;
import com.onelogin.client.model.Hook;
import com.onelogin.client.model.HookEnvvar;
import com.onelogin.client.model.HookLog;
import com.onelogin.client.model.HookStatus;
import com.onelogin.client.model.UpdateEnvironmentVariableRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SmartHooksApi
 */
@Disabled
public class SmartHooksApiTest {

    private final SmartHooksApi api = new SmartHooksApi();

    /**
     * Create Environment Variable
     *
     * Create Environment Variable
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createEnvironmentVariableTest() throws ApiException {
        HookEnvvar hookEnvvar = null;
        HookEnvvar response = api.createEnvironmentVariable(hookEnvvar);
        // TODO: test validations
    }

    /**
     * Create Smart Hook
     *
     * Create Smart Hook
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createHookTest() throws ApiException {
        Hook hook = null;
        Hook response = api.createHook(hook);
        // TODO: test validations
    }

    /**
     * Delete Environment Variable
     *
     * Delete Environment Variable
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteEnvironmentVariableTest() throws ApiException {
        String envvarId = null;
        api.deleteEnvironmentVariable(envvarId);
        // TODO: test validations
    }

    /**
     * Delete Smart Hook by ID
     *
     * Delete Smart Hook
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteHookTest() throws ApiException {
        String hookId = null;
        api.deleteHook(hookId);
        // TODO: test validations
    }

    /**
     * Get Environment Variable
     *
     * Get Environment Variable
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEnvironmentVariableTest() throws ApiException {
        String envvarId = null;
        HookEnvvar response = api.getEnvironmentVariable(envvarId);
        // TODO: test validations
    }

    /**
     * Get Smart Hook by ID
     *
     * Get Smart Hook
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHookTest() throws ApiException {
        String hookId = null;
        Hook response = api.getHook(hookId);
        // TODO: test validations
    }

    /**
     * Get Smart Hook Logs
     *
     * Get Smart Hook Logs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLogsTest() throws ApiException {
        String hookId = null;
        Integer limit = null;
        Integer page = null;
        String cursor = null;
        String requestId = null;
        String correlationId = null;
        List<HookLog> response = api.getLogs(hookId, limit, page, cursor, requestId, correlationId);
        // TODO: test validations
    }

    /**
     * List Environment Variables
     *
     * List Environment Variables
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listEnvironmentVariablesTest() throws ApiException {
        Integer limit = null;
        Integer page = null;
        String cursor = null;
        List<HookEnvvar> response = api.listEnvironmentVariables(limit, page, cursor);
        // TODO: test validations
    }

    /**
     * List all Smart Hooks
     *
     * List Smart Hooks
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listHooksTest() throws ApiException {
        Integer limit = null;
        Integer page = null;
        String cursor = null;
        List<Hook> response = api.listHooks(limit, page, cursor);
        // TODO: test validations
    }

    /**
     * Update Environment Variable
     *
     * Update Environment Variable
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateEnvironmentVariableTest() throws ApiException {
        String envvarId = null;
        UpdateEnvironmentVariableRequest updateEnvironmentVariableRequest = null;
        HookEnvvar response = api.updateEnvironmentVariable(envvarId, updateEnvironmentVariableRequest);
        // TODO: test validations
    }

    /**
     * Update Smart Hook by ID
     *
     * Update Smart Hook
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateHookTest() throws ApiException {
        String hookId = null;
        Hook hook = null;
        Hook response = api.updateHook(hookId, hook);
        // TODO: test validations
    }

}
