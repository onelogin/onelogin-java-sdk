/*
 * OneLogin API
 * OpenAPI Specification for OneLogin
 *
 * The version of the OpenAPI document: 3.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import com.onelogin.client.ApiException;
import com.onelogin.client.model.AltErr;
import com.onelogin.client.model.Connector;
import com.onelogin.client.model.CreateApp200Response;
import com.onelogin.client.model.CreateAppRequest;
import com.onelogin.client.model.Error;
import com.onelogin.client.model.GenericApp;
import com.onelogin.client.model.User;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AppsApi
 */
@Disabled
public class AppsApiTest {

    private final AppsApi api = new AppsApi();

    /**
     * Create App
     *
     * Create App
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAppTest() throws ApiException {
        String contentType = null;
        CreateAppRequest createAppRequest = null;
        CreateApp200Response response = api.createApp(contentType, createAppRequest);
        // TODO: test validations
    }

    /**
     * Delete App
     *
     * Delete App
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAppTest() throws ApiException {
        Integer appId = null;
        api.deleteApp(appId);
        // TODO: test validations
    }

    /**
     * Delete Parameter from App
     *
     * Delete Parameter from App
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAppParameterTest() throws ApiException {
        Integer appId = null;
        String parameterId = null;
        api.deleteAppParameter(appId, parameterId);
        // TODO: test validations
    }

    /**
     * Get App
     *
     * Get App
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAppTest() throws ApiException {
        Integer appId = null;
        GenericApp response = api.getApp(appId);
        // TODO: test validations
    }

    /**
     * Get App Users
     *
     * Get App Users
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAppUsersTest() throws ApiException {
        Integer appId = null;
        List<User> response = api.getAppUsers(appId);
        // TODO: test validations
    }

    /**
     * List Apps
     *
     * List Apps
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppsTest() throws ApiException {
        List<GenericApp> response = api.listApps();
        // TODO: test validations
    }

    /**
     * List Connectors
     *
     * List Connectors
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listConnectorsTest() throws ApiException {
        String name = null;
        Connector response = api.listConnectors(name);
        // TODO: test validations
    }

    /**
     * Update App
     *
     * Update App
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAppTest() throws ApiException {
        Integer appId = null;
        Map<String, Object> requestBody = null;
        GenericApp response = api.updateApp(appId, requestBody);
        // TODO: test validations
    }

}
