/*
 * OneLogin API
 * OpenAPI Specification for OneLogin
 *
 * The version of the OpenAPI document: 3.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onelogin.client.api;

import com.onelogin.client.ApiException;
import com.onelogin.client.model.AltErr;
import com.onelogin.client.model.ListMessageTemplates200ResponseInner;
import com.onelogin.client.model.MessageTemplate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BrandingServiceTemplatesApi
 */
@Disabled
public class BrandingServiceTemplatesApiTest {

    private final BrandingServiceTemplatesApi api = new BrandingServiceTemplatesApi();

    /**
     * Create Message Template
     *
     * Create Message Template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMessageTemplateTest() throws ApiException {
        Integer brandId = null;
        String locale = null;
        MessageTemplate messageTemplate = null;
        MessageTemplate response = api.createMessageTemplate(brandId, locale, messageTemplate);
        // TODO: test validations
    }

    /**
     * Delete Message Template
     *
     * Delete Message Template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMessageTemplateTest() throws ApiException {
        Integer brandId = null;
        Integer templateId = null;
        api.deleteMessageTemplate(brandId, templateId);
        // TODO: test validations
    }

    /**
     * Get Master Template by Type
     *
     * Get Master Template by Type
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMasterByTypeTest() throws ApiException {
        String templateType = null;
        MessageTemplate response = api.getMasterByType(templateType);
        // TODO: test validations
    }

    /**
     * Get Message Template
     *
     * Get Message Template by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMessageTemplateByIdTest() throws ApiException {
        Integer brandId = null;
        Integer templateId = null;
        MessageTemplate response = api.getMessageTemplateById(brandId, templateId);
        // TODO: test validations
    }

    /**
     * Get Template by Type &amp; Locale
     *
     * Get Template by Type and Locale
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTemplateByLocaleTest() throws ApiException {
        Integer brandId = null;
        String templateType = null;
        String locale = null;
        MessageTemplate response = api.getTemplateByLocale(brandId, templateType, locale);
        // TODO: test validations
    }

    /**
     * List Message Templates
     *
     * List Message Templates
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMessageTemplatesTest() throws ApiException {
        Integer brandId = null;
        String locale = null;
        List<ListMessageTemplates200ResponseInner> response = api.listMessageTemplates(brandId, locale);
        // TODO: test validations
    }

    /**
     * Update Message Template
     *
     * Update Message Template by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMessageTemplateByIdTest() throws ApiException {
        Integer brandId = null;
        Integer templateId = null;
        MessageTemplate response = api.updateMessageTemplateById(brandId, templateId);
        // TODO: test validations
    }

    /**
     * Update Template by Type &amp; Locale
     *
     * Update Template by Type and Locale
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTemplateByLocaleTest() throws ApiException {
        Integer brandId = null;
        String templateType = null;
        String locale = null;
        MessageTemplate response = api.updateTemplateByLocale(brandId, templateType, locale);
        // TODO: test validations
    }

}
